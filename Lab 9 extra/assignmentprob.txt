#include <stdio.h>
#include <limits.h>

#define MAX 10

int n;
int cost[MAX][MAX];
int minCost = INT_MAX;
int assigned[MAX];
int currentAssignment[MAX];
int bestAssignment[MAX];

void assign(int worker, int totalCost) {
    if (worker == n) {
        if (totalCost < minCost) {
            minCost = totalCost;
            for (int i = 0; i < n; i++) {
                bestAssignment[i] = currentAssignment[i];
            }
        }
        return;
    }

    for (int j = 0; j < n; j++) {
        if (!assigned[j]) {
            assigned[j] = 1;
            currentAssignment[worker] = j; // assign job j to worker
            assign(worker + 1, totalCost + cost[worker][j]);
            assigned[j] = 0; // backtrack
        }
    }
}

int main() {
    printf("Enter the number of workers/jobs: ");
    scanf("%d", &n);

    printf("Enter the cost matrix (%d x %d):\n", n, n);
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            scanf("%d", &cost[i][j]);
        }
    }

    for (int i = 0; i < n; i++)
        assigned[i] = 0;

    assign(0, 0);

    printf("Minimum total cost = %d\n", minCost);
    printf("Assignments (Worker -> Job):\n");
    for (int i = 0; i < n; i++) {
        printf("Worker %d -> Job %d (Cost = %d)\n", i, bestAssignment[i], cost[i][bestAssignment[i]]);
    }

    return 0;
}
